.clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

.opacity(@opacity: 1) {
    @ieOpacity: @opacity * 100;
    filter: ~"alpha(opacity=@{ieOpacity})";
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{ieOpacity})";
    opacity: @opacity;
}

.font-face(@fontName: sans-serif; @fontWeight: normal; @fontStyle: normal; @path: '../fonts') {
    @font-face {
        font-family: @fontName;
        src: url('@{path}/@{fontName}.eot');
        src: url('@{path}/@{fontName}.eot?#iefix') format('embedded-opentype'),
             url('@{path}/@{fontName}.woff') format('woff'),
             url('@{path}/@{fontName}.ttf') format('truetype'),
             url('@{path}/@{fontName}.svg#@{fontName}') format('svg');
        font-weight: @fontWeight;
        font-style: @fontStyle;
    }
}


.inlineblock {
    display: inline-block;
    vertical-align: top;
}